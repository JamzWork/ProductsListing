// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.21"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.35.1"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.5"
        classpath 'com.google.gms:google-services:4.3.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    retrofit2 = "2.9.0"
    loggingInterceptor = "4.9.0"
    retrofitGsonConvertor = "2.9.0"
    gson = "2.8.6"
    dataStorePref = "1.0.0-alpha02"
    lifecyleViewModel = "2.2.0"
    lifeCycleExtension = "2.2.0"
    coroutines = "1.4.3"
    timber = "4.7.1"
    navFragment = "2.3.5"
    activityKtx = "1.2.2"
    fragmentKtx = "1.3.4"
    hilt = "2.35.1"
    databinding = "3.1.4"
    materialDesign = "1.3.0"
    constraintlayout = "2.0.4"
    ktx_core = "1.3.2"
    appcompat = "1.3.0"
    textSize = "1.0.6"
    paging3 = "3.0.0"
    jsoup = "1.13.1"
    gson = "2.8.6"
    work_version = "2.4.0"
    otto = "1.3.8"

    common = [
            ktx_core     : "androidx.core:core-ktx:${ktx_core}",
            appcompat    : "androidx.appcompat:appcompat:${appcompat}",
            dataBinding  : "com.android.databinding:compiler:${databinding}",
            activityKtx  : "androidx.activity:activity-ktx:${activityKtx}",
            fragmentKtx  : "androidx.fragment:fragment-ktx:${fragmentKtx}",
            dataStorePref: "androidx.datastore:datastore-preferences:${dataStorePref}",
            otto         : "com.squareup:otto:${otto}",
    ]
    backgroundTasks = [
            coroutines           : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines}",
            workManager          : "androidx.work:work-runtime-ktx:${work_version}",
     ]

    retrofit = [
            retrofit2            : "com.squareup.retrofit2:retrofit:${retrofit2}",
            loggingInterceptor   : "com.squareup.okhttp3:logging-interceptor:${loggingInterceptor}",
            retrofitGsonConvertor: "com.squareup.retrofit2:converter-gson:${retrofitGsonConvertor}",
    ]

    navigation = [
            navFragment: "androidx.navigation:navigation-fragment-ktx:${navFragment}",
            navKtx     : "androidx.navigation:navigation-ui-ktx:${navFragment}"
    ]

    di = [
            hilt      : "com.google.dagger:hilt-android:${hilt}",
            hiltDagger: "com.google.dagger:hilt-compiler:${hilt}"
    ]

    logs = [
            timber: "com.jakewharton.timber:timber:${timber}"
    ]

    lifecycle = [
            lifeCycleExtension : "androidx.lifecycle:lifecycle-extensions:${lifeCycleExtension}",
            lifeCycleLiveData  : "androidx.lifecycle:lifecycle-livedata-ktx:${lifeCycleExtension}",
            lifeCycleRuntime   : "androidx.lifecycle:lifecycle-runtime:${lifeCycleExtension}",
            lifeCycleRuntimeKtx: "androidx.lifecycle:lifecycle-runtime-ktx:${lifeCycleExtension}",
            lifecyleViewModel  : "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecyleViewModel}"
    ]

    paging3 = [
            pagingRuntime   : "androidx.paging:paging-runtime:${paging3}",
            pagingRuntimeKtx: "androidx.paging:paging-runtime-ktx:${paging3}"
    ]

    ui = [
            materialDesign  : "com.google.android.material:material:${materialDesign}",
            constraintLayout: "androidx.constraintlayout:constraintlayout:${constraintlayout}",
            ssp             : "com.intuit.ssp:ssp-android:$textSize",
            sdp             : "com.intuit.sdp:sdp-android:$textSize",
     ]

    parser = [
            jsoup: "org.jsoup:jsoup:${jsoup}",
            gson : "com.google.code.gson:gson:${gson}",

    ]
}